set.seed(31);
heightsCM = rnorm(30, mean = 188, sd = 5);
wightsK = rnorm(30, mean = 84, sd = 3);
weightsK = rnorm(30, mean = 84, sd = 3);
hasDaughter = sample(c(TRUE,FALSE), size = 30, replace = T);
dataFrame = data.frame(heightsCM, weightsK, hasDaughter);
dataFrame
dataFrameSubset <- dataFrame[heightsCM > 188,]
dataFrameSubset
mean(dataFrameSubset$weightsK)
set.seed(31);
heightsCM = rnorm(30, mean = 188, sd = 5);
weightsK = rnorm(30, mean = 84, sd = 3);
hasDaughter = sample(c(TRUE,FALSE), size = 30, replace = T);
dataFrame = data.frame(heightsCM, weightsK, hasDaughter);
dataFrameSubset <- dataFrame[heightsCM > 188,]
mean(dataFrameSubset$weightsK)
x=c(2,7,5)
x
y=seq(from=4,length=3,by=3)
?seq
y
x+y
x/y
x^y
x[2]
x[2:3]
x[-2]
x[-c(1,2)]
z=matrix(seq(1,12),4,3)
z
z[3:4,2:3]
z[,2:3]
z[,1]
z[,1,drop=FALSE]
dim(z)
ls()
rm(y)
ls()
### Generating random data, graphics
x=runif(50)
y=rnorm(50)
x
y
x
plot(x,y)
plot(x,y,xlab="Random Uniform",ylab="Random Normal",pch="*",col="blue")
par(mfrow=c(2,1))
plot(x,y)
plot(x,y)
hist(y)
par(mfrow=c(1,1))
### Reading in data
Auto=read.csv("Auto.csv")
pwd()
load(auto)
library(auto)
6.7502 + (.0191 + .0011*1)*50 + .0289*1
(.0191 + .0011*1)*50 + .0289*1
(.0191 + .0011*1)*50
(.0289 + .0011*50) * 1
(.0289 + .0011*250) * 1
?log
?log
?lm
rep(0,5)
require(ISLR)
require(boot)
?cv.glm
plot(mpg~horsepower,data=Auto)
## LOOCV
glm.fit=glm(mpg~horsepower, data=Auto)
cv.glm(Auto,glm.fit)$delta #pretty slow (doesnt use formula (5.2) on page 180)
##Lets write a simple function to use formula (5.2)
loocv=function(fit){
h=lm.influence(fit)$h
mean((residuals(fit)/(1-h))^2)
}
## Now we try it out
loocv(glm.fit)
cv.error=rep(0,5)
degree=1:5
for(d in degree){
glm.fit=glm(mpg~poly(horsepower,d), data=Auto)
cv.error[d]=loocv(glm.fit)
}
plot(degree,cv.error,type="b")
## 10-fold CV
cv.error10=rep(0,5)
for(d in degree){
glm.fit=glm(mpg~poly(horsepower,d), data=Auto)
cv.error10[d]=cv.glm(Auto,glm.fit,K=10)$delta[1]
}
lines(degree,cv.error10,type="b",col="red")
## Bootstrap
## Minimum risk investment - Section 5.2
alpha=function(x,y){
vx=var(x)
vy=var(y)
cxy=cov(x,y)
(vy-cxy)/(vx+vy-2*cxy)
}
alpha(Portfolio$X,Portfolio$Y)
alpha.fn=function(data, index){
with(data[index,],alpha(X,Y))
}
alpha.fn(Portfolio,1:100)
set.seed(1)
alpha.fn (Portfolio,sample(1:100,100,replace=TRUE))
boot.out=boot(Portfolio,alpha.fn,R=1000)
boot.out
plot(boot.out)
library(boot)
load("5.R.RData")
summary(glm(y~., data = Xy))
matplot(Xy, type = "l")
library(boot)
load("5.R.RData")
library(boot)
load("5.R.RData")
summary(glm(y~., data = Xy))
matplot(Xy, type = "l")
library(boot)
load("5.R.RData")
library(boot)
load("5.R.RData")
x <- c(1,5,3,6,2)
order(x)
x[order(x)]
x <- data.frame(a = c(1,2,3), b = c(4,5,6), c = (7,8,9))
x <- data.frame(a = c(1,2,3), b = c(4,5,6), c = c(7,8,9))
x
anmes(x)
names(x)
x$d <- numeric()
x$d <- numeric(3)
x
x$d <- character(3)
x
x$d <- numeric(3)
?numeric
x$e <- NA
x
x
x <- c(1,5,4,6,2)
x
sort(x)
x
rep(1:9)
rep(1:9, len = 54)
head(mtcars)
carMelt <- melt(mtcars, ic = c(rownames(mtcars), 'gear', 'cyc'), measure.vars = c('mpg', 'hp'))
?melt
library(reshape2)
install.packages(reshape2)
install.packages('reshape2')
library(reshape2)
carMelt <- melt(mtcars, ic = c(rownames(mtcars), 'gear', 'cyc'), measure.vars = c('mpg', 'hp'))
head(carMelt)
carMelt <- melt(mtcars, ic = c('gear', 'cyc'), measure.vars = c('mpg', 'hp'))
head(carMelt)
head(carMelt)
carMelt <- melt(mtcars, id = c(rownames(mtcars), 'gear', 'cyc'), measure.vars = c('mpg', 'hp'))
carMelt <- melt(mtcars, id = c('gear', 'cyl'), measure.vars = c('mpg', 'hp'))
head(carMelt)
setwd("G:/Self-Education/John Hopkins Data Science Specialization/3. Getting and Cleaning Data/week3/quiz")
if(!file.exists('data')) {
dir.create('data')
}
fileUrl <- 'https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv'
codeBookUrl <- 'https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FPUMSDataDict06.pdf'
download.file(fileUrl, destfile = 'data/housing.csv', method = 'curl')
